// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    var IconUser, Input, InputPassword, InputUsername, Login, LoginButton, log;
    log = function(msg) {
      return console.log(msg);
    };
    Login = (function() {

      function Login() {}

      return Login;

    })();
    IconUser = (function() {

      function IconUser() {}

      IconUser.icon = $('#icon-user');

      IconUser.shap = $('#icon-user-shape');

      IconUser.reset = function() {
        return this.icon.fadeTo(50, 0);
      };

      IconUser.show = function(img) {
        this.icon.css('background-image', "url('" + img + "')");
        return this.icon.show().fadeTo(100, 1);
      };

      return IconUser;

    })();
    Input = (function() {

      function Input() {}

      Input.value = null;

      Input.isFocus = false;

      Input.onFocus = function() {
        Input.log('onFocus');
        return Input.isFocus = true;
      };

      Input.onBlur = function() {
        Input.log('onBlur');
        return Input.isFocus = false;
      };

      Input.log = function(msg) {
        return console.log(this, msg);
      };

      Input.isEmail = function(email) {
        var re;
        re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
      };

      return Input;

    }).call(this);
    InputUsername = (function(_super) {

      __extends(InputUsername, _super);

      function InputUsername() {
        return InputUsername.__super__.constructor.apply(this, arguments);
      }

      InputUsername.input = $('.input-username');

      InputUsername.init = function() {
        return this.input.keyup(this.onKeyup);
      };

      InputUsername.onChange = function(ev) {
        return InputUsername.log('onChange');
      };

      InputUsername.onKeyup = function(ev) {
        if (InputUsername.input.val() === InputUsername.value) {
          return;
        }
        InputUsername.value = InputUsername.input.val();
        if (InputUsername.isEmail(InputUsername.value)) {
          return InputUsername.getUser(InputUsername.value);
        }
      };

      InputUsername.getUser = function(username) {
        if (username !== 'imshallker@gmail.com') {
          return IconUser.reset();
        }
        return IconUser.show('http://tp2.sinaimg.cn/1946601341/180/40013145637/1');
      };

      return InputUsername;

    }).call(this, Input);
    InputPassword = (function(_super) {

      __extends(InputPassword, _super);

      function InputPassword() {
        return InputPassword.__super__.constructor.apply(this, arguments);
      }

      InputPassword.finished = false;

      InputPassword.watching = null;

      InputPassword.value = null;

      InputPassword.input = $('.input-password');

      InputPassword.init = function() {
        this.input.change(this.onChange);
        this.input.keyup(this.onKeyup);
        this.input.focus(this.onFocus);
        return this.input.blur(this.onBlur);
      };

      InputPassword.trySubmit = function() {
        if (!this.finished) {
          return;
        }
        return log('submit');
      };

      InputPassword.onChange = function(ev) {
        return log('onChange');
      };

      InputPassword.onKeyup = function(ev) {
        log('onKeyup');
        if (InputPassword.input.val() === InputPassword.value) {
          return;
        }
        InputPassword.value = InputPassword.input.val();
        return InputPassword.validate(InputPassword.value);
      };

      InputPassword.onFocus = function(ev) {
        log('onFocus');
        return InputPassword.watching = window.setInterval(function() {
          return InputPassword.trySubmit();
        }, 100);
      };

      InputPassword.onBlur = function(ev) {
        log('onBlur');
        return window.clearInterval(InputPassword.watching);
      };

      InputPassword.validate = function(password) {
        if (password.length > 3) {
          return this.finished = true;
        } else {
          return this.finished = false;
        }
      };

      return InputPassword;

    }).call(this, Input);
    LoginButton = (function() {

      function LoginButton() {}

      return LoginButton;

    })();
    InputUsername.init();
    return InputPassword.init();
  });

}).call(this);
